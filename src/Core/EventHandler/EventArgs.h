#pragma once

#include "CA_Export.h"

namespace CasaEngine
{
	class EventSet;

	/*!
	\brief
		Base class used as the argument to all subscribers Event object.

		The base EventArgs class does not contain any useful information, it is intended
		to be specialised for each type of event that can be generated by objects within
		the system.  The use of this base class allows all event subscribers to have the
		same function signature.

		The \a handled field is used to signal whether an event was actually handled or not.  While
		the event system does not look at this value, code at a higher level can use it to determine
		how far to propagate an event.
	*/
	class CA_EXPORT EventArgs
	{
	public:
		EventArgs() : handled(0) {}
		virtual ~EventArgs() = default;

		//! handlers should increment this if they handled the event.
		unsigned int handled;
	};

	/*!
	\brief
		EventArgs subclass used for linked events, that is an event fired on an
		EventSet that was triggered by some other event (either on the same
		EventSet or a different EventSet.
	*/
	class CA_EXPORT LinkedEventArgs : public EventArgs
	{
	public:
		LinkedEventArgs(const EventArgs& args, const EventSet* event_set) :
			originalArgs(args),
			sourceEventSet(event_set)
		{
		}

		//! a reference to the EventArgs passed to handlers of the triggering event.
		const EventArgs& originalArgs;
		//! pointer to the EventSet that is the source of this linked event.
		const EventSet* sourceEventSet;
	};
}
