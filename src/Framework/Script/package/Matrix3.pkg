
class Matrix3
{
	Matrix3(float m11 = 1.0f, float m12 = 0.0f, float m13 = 0.0f,
		float m21 = 0.0f, float m22 = 1.0f, float m23 = 0.0f,
		float m31 = 0.0f, float m32 = 0.0f, float m33 = 1.0f);
		
	void Identity();
	float Determinant() const;
	Matrix3 Transpose() const;
	Matrix3 Inverse() const;
	void CreateTranslation(float x, float y);
	void CreateScaling(float x, float y);
	void CreateRotation(float Angle);
	void CreateRotation(float Angle, const CVector2<float>& Center);
	void Translate(float x, float y);
	void Scale(float x, float y);
	void Rotate(float Angle);
	void Rotate(const CVector2<float> &fwd, const CVector2<float> &side);
	CVector2<float> GetTranslation() const;
	CVector3<float> Transform(const CVector2<float>& v, float w = 1.0f) const;
	CVector3<float> Transform(const CVector3<float>& v) const;
	void TransformVector2List(std::vector<CVector2<float>> &vPoint_);
	void TransformVector2F(CVector2<float> &vPoint);
	
	Matrix3 operator +() const;
	Matrix3 operator -() const;
	Matrix3 operator +(const Matrix3& m) const;
	Matrix3 operator -(const Matrix3& m) const;
	//const Matrix3& operator +=(const Matrix3& m);
	//const Matrix3& operator -=(const Matrix3& m);
	Matrix3 operator *(const Matrix3& m) const;
	//const Matrix3& operator *=(const Matrix3& m);
	//const Matrix3& operator *=(float t);
	//const Matrix3& operator /=(float t);
	bool operator ==(const Matrix3& m) const;
	//bool operator !=(const Matrix3& m) const;
	//float& operator ()(std::size_t i, std::size_t j);
	//const float& operator ()(std::size_t i, std::size_t j) const;
	//operator float*();
	//operator const float*() const;
};
