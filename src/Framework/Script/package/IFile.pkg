namespace FileMode
{
	enum TFileMode
	{
		READ,
		STREAM,
		WRITE,
	};
}

namespace SeekDir
{
	enum TSeekDir
	{
		SEEKDIR_SET, // Beginning of file
		SEEKDIR_CUR, // Current position of the file pointer
		SEEKDIR_END, // End of file
	};
}

/**
 * 
 */
class IFile
{
	virtual bool Open(const char* fileName_, FileMode::TFileMode mode_) = 0;
	virtual bool Create(const char* fileName_, bool append_) = 0;
	virtual void Close() = 0;
	virtual bool Exists() const = 0;
	virtual int Read(char *dst_, unsigned int size_) = 0;
	virtual int Write(char *data_, unsigned int size_) = 0;
	virtual unsigned int Seek(unsigned int off_, SeekDir::TSeekDir dir_) = 0;
	
	unsigned int Seek(unsigned int pos_);
	unsigned int Position() const;
	char *GetBuffer();
	unsigned int GetBufferLength();
	
	const std::string& Fullname() const;
	std::string Filename() const;
	std::string ShortFilename() const;
	std::string Extension() const;
};
